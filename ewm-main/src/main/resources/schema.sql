create TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    name VARCHAR(250) NOT NULL ,
    email VARCHAR(254) NOT NULL UNIQUE
);

create TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    name VARCHAR(64) NOT NULL UNIQUE
);

create TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    title VARCHAR(255) NOT NULL ,
    description TEXT NOT NULL ,
    annotation TEXT NOT NULL ,
    category_id BIGINT ,
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL ,
    published_on TIMESTAMP WITHOUT TIME ZONE ,
    created_on TIMESTAMP WITHOUT TIME ZONE ,
    latitude REAL NOT NULL ,
    longitude REAL NOT NULL ,
    initiator_id BIGINT NOT NULL ,
    paid BOOLEAN NOT NULL ,
    participant_limit BIGINT NOT NULL ,
    request_moderation BOOLEAN NOT NULL ,
    state VARCHAR(50),
    CONSTRAINT FK_EVENTS_USERS FOREIGN KEY (initiator_id) REFERENCES users (id) ON delete CASCADE ,
    CONSTRAINT FK_EVENTS_CATEGORY FOREIGN KEY (category_id) REFERENCES categories (id) ON delete CASCADE
);

create TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    event_id BIGINT NOT NULL ,
    requester_id BIGINT NOT NULL ,
    created TIMESTAMP WITHOUT TIME ZONE ,
    status VARCHAR(64) ,
    CONSTRAINT UN_REQUESTS UNIQUE (event_id, requester_id),
    CONSTRAINT FK_REQ_EVENTS FOREIGN KEY (event_id) REFERENCES events (id) ON delete CASCADE ,
    CONSTRAINT FK_REQ_USERS FOREIGN KEY (requester_id) REFERENCES users (id) ON delete CASCADE
);

create TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN,
    title VARCHAR(128)
);

create TABLE IF NOT EXISTS compilations_events (
    compilation_id BIGINT NOT NULL ,
    event_id BIGINT NOT NULL ,
    CONSTRAINT PK_COMP_EVENTS PRIMARY KEY (compilation_id, event_id) ,
    CONSTRAINT FK_COMPILATION FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON delete CASCADE ,
    CONSTRAINT FK_EVENTS FOREIGN KEY (event_id) REFERENCES events (id) ON delete CASCADE
);

